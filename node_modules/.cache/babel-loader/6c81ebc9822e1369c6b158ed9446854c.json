{"ast":null,"code":"var _jsxFileName = \"/home/vojta-pc/Documents/FrontEnd/PathfindingBeta/pathfindinfbeta/src/components/Pathfind.js\";\nimport React, { useState, useEffect } from 'react'; // import uniqueId from 'react-html-id'\n\nimport Node from './Node';\nimport './Pathfind.css';\nimport Bfs from './Bfs';\nconst cols = 45;\nconst rows = 20;\nconst START_ROW = 0;\nconst START_COL = 0;\nconst END_ROW = rows - 1;\nconst END_COL = cols - 1;\n\nconst Pathfind = () => {\n  const [Grid, setGrid] = useState([]);\n  useEffect(() => {\n    initalizeGrid();\n  }, []);\n\n  const initalizeGrid = () => {\n    const grid = [];\n\n    for (let i = 0; i < rows; i++) {\n      grid[i] = new Array();\n\n      for (let j = 0; j < cols; j++) {\n        grid[i][j] = new Node(i, j);\n      }\n    } // createSpot(grid);\n\n\n    setGrid(grid);\n  }; // const createSpot = (grid) => {\n  //     for (let i = 0; i < rows; i++) {\n  //         for (let j = 0; j < cols; j++) {\n  //             grid[i][j] = new Spot(i, j);\n  //         }\n  //     }\n  // };\n\n\n  function Spot(x, y) {\n    this.x = x;\n    this.y = y;\n    this.isStart = this.x === START_ROW && this.y === START_COL;\n    this.isEnd = this.x === END_ROW && this.y === END_COL;\n    this.g = 0;\n    this.f = 0;\n    this.h = 0;\n  }\n\n  ;\n  const gridwithNode = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, Grid.map((row, rowIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: rowIndex,\n      className: \"rowWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, row.map((col, colIndex) => {\n      const {\n        isStart,\n        isEnd\n      } = col;\n      return /*#__PURE__*/React.createElement(Node, {\n        key: colIndex,\n        isStart: isStart,\n        isEnd: isEnd,\n        row: rowIndex,\n        col: colIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      });\n    }));\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Pathfinding\"), gridwithNode, /*#__PURE__*/React.createElement(Bfs, {\n    grid: Grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Pathfind;","map":{"version":3,"sources":["/home/vojta-pc/Documents/FrontEnd/PathfindingBeta/pathfindinfbeta/src/components/Pathfind.js"],"names":["React","useState","useEffect","Node","Bfs","cols","rows","START_ROW","START_COL","END_ROW","END_COL","Pathfind","Grid","setGrid","initalizeGrid","grid","i","Array","j","Spot","x","y","isStart","isEnd","g","f","h","gridwithNode","map","row","rowIndex","col","colIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,SAAS,GAAG,CAAlB;AACA,MAAMC,SAAS,GAAG,CAAlB;AACA,MAAMC,OAAO,GAAGH,IAAI,GAAG,CAAvB;AACA,MAAMI,OAAO,GAAGL,IAAI,GAAG,CAAvB;;AAEA,MAAMM,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAApB,EAA0BU,CAAC,EAA3B,EAA+B;AAC3BD,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAU,IAAIC,KAAJ,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAApB,EAA0Ba,CAAC,EAA3B,EAA+B;AAC3BH,QAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQE,CAAR,IAAa,IAAIf,IAAJ,CAASa,CAAT,EAAYE,CAAZ,CAAb;AACH;AACJ,KARuB,CAUxB;;;AAEAL,IAAAA,OAAO,CAACE,IAAD,CAAP;AACH,GAbD,CAPmB,CAsBnB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASI,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAChB,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,OAAL,GAAe,KAAKF,CAAL,KAAWb,SAAX,IAAwB,KAAKc,CAAL,KAAWb,SAAlD;AACA,SAAKe,KAAL,GAAa,KAAKH,CAAL,KAAWX,OAAX,IAAsB,KAAKY,CAAL,KAAWX,OAA9C;AACA,SAAKc,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH;;AAAA;AAED,QAAMC,YAAY,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,IAAI,CAACgB,GAAL,CAAS,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACzB,wBACI;AAAK,MAAA,GAAG,EAAEA,QAAV;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAMC,QAAN,KAAmB;AACxB,YAAM;AAAEV,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAqBQ,GAA3B;AACA,0BACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEC,QAAX;AAAqB,QAAA,OAAO,EAAEV,OAA9B;AAAuC,QAAA,KAAK,EAAEC,KAA9C;AAAqD,QAAA,GAAG,EAAEO,QAA1D;AAAoE,QAAA,GAAG,EAAEE,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KALA,CADL,CADJ;AAUH,GAXA,CADL,CADJ;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKL,YAFL,eAGI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEf,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAhED;;AAkEA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n// import uniqueId from 'react-html-id'\nimport Node from './Node';\nimport './Pathfind.css';\nimport Bfs from './Bfs';\n\nconst cols = 45;\nconst rows = 20;\nconst START_ROW = 0;\nconst START_COL = 0;\nconst END_ROW = rows - 1;\nconst END_COL = cols - 1;\n\nconst Pathfind = () => {\n    const [Grid, setGrid] = useState([]);\n\n    useEffect(() => {\n        initalizeGrid();\n    }, []);\n\n    const initalizeGrid = () => {\n        const grid = [];\n\n        for (let i = 0; i < rows; i++) {\n            grid[i] = new Array();\n            for (let j = 0; j < cols; j++) {\n                grid[i][j] = new Node(i, j);\n            }\n        }\n\n        // createSpot(grid);\n\n        setGrid(grid);\n    };\n\n    // const createSpot = (grid) => {\n    //     for (let i = 0; i < rows; i++) {\n    //         for (let j = 0; j < cols; j++) {\n    //             grid[i][j] = new Spot(i, j);\n    //         }\n    //     }\n    // };\n\n    function Spot(x, y) {\n        this.x = x;\n        this.y = y;\n        this.isStart = this.x === START_ROW && this.y === START_COL;\n        this.isEnd = this.x === END_ROW && this.y === END_COL;\n        this.g = 0;\n        this.f = 0;\n        this.h = 0;\n    };\n\n    const gridwithNode = (\n        <div>\n            {Grid.map((row, rowIndex) => {\n                return (\n                    <div key={rowIndex} className='rowWrapper'>\n                        {row.map((col, colIndex) => {\n                            const { isStart, isEnd } = col;\n                            return (\n                                <Node key={colIndex} isStart={isStart} isEnd={isEnd} row={rowIndex} col={colIndex} />\n                            )\n                        })}\n                    </div>\n                )\n            })}\n        </div>\n    )\n\n    return (\n        <div className='Wrapper'>\n            <h1>Pathfinding</h1>\n            {gridwithNode}\n            <Bfs grid={Grid} />\n        </div>\n    )\n}\n\nexport default Pathfind\n"]},"metadata":{},"sourceType":"module"}