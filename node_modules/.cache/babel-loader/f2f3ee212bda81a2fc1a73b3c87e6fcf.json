{"ast":null,"code":"var _jsxFileName = \"/home/vojta-pc/Documents/FrontEnd/PathfindingBeta/pathfindinfbeta/src/components/Node.js\";\nimport React from 'react';\nimport './Node.css';\n\nconst Node = ({\n  isStart,\n  isEnd,\n  searched,\n  isPath,\n  row,\n  col,\n  targetDiv\n}) => {\n  const classes = isStart ? \"node_start\" : isEnd ? \"node_end\" : isPath ? \"node_path\" : \"\";\n  const dragAble = isStart ? true : isEnd ? true : false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `node ${classes}`,\n    id: `node-${row}-${col}`,\n    draggable: dragAble,\n    onDragStart: e => e.dataTransfer.setData(\"Text\", e.target.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Node;","map":{"version":3,"sources":["/home/vojta-pc/Documents/FrontEnd/PathfindingBeta/pathfindinfbeta/src/components/Node.js"],"names":["React","Node","isStart","isEnd","searched","isPath","row","col","targetDiv","classes","dragAble","e","dataTransfer","setData","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA,GAApC;AAAyCC,EAAAA,GAAzC;AAA8CC,EAAAA;AAA9C,CAAD,KAA+D;AACxE,QAAMC,OAAO,GAAGP,OAAO,GAAG,YAAH,GAAkBC,KAAK,GAAG,UAAH,GAAgBE,MAAM,GAAG,WAAH,GAAiB,EAArF;AACA,QAAMK,QAAQ,GAAGR,OAAO,GAAG,IAAH,GAAUC,KAAK,GAAG,IAAH,GAAU,KAAjD;AAEA,sBACI;AACI,IAAA,SAAS,EAAG,QAAOM,OAAQ,EAD/B;AAEI,IAAA,EAAE,EAAG,QAAOH,GAAI,IAAGC,GAAI,EAF3B;AAGI,IAAA,SAAS,EAAEG,QAHf;AAII,IAAA,WAAW,EAAGC,CAAD,IAAQA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,MAAvB,EAA+BF,CAAC,CAACG,MAAF,CAASC,EAAxC,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CAdD;;AAgBA,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport './Node.css';\n\nconst Node = ({ isStart, isEnd, searched, isPath, row, col, targetDiv }) => {\n    const classes = isStart ? \"node_start\" : isEnd ? \"node_end\" : isPath ? \"node_path\" : \"\";\n    const dragAble = isStart ? true : isEnd ? true : false;\n\n    return (\n        <div\n            className={`node ${classes}`}\n            id={`node-${row}-${col}`}\n            draggable={dragAble}\n            onDragStart={(e) => (e.dataTransfer.setData(\"Text\", e.target.id))}\n        >\n\n        </div>\n    )\n}\n\nexport default Node;"]},"metadata":{},"sourceType":"module"}