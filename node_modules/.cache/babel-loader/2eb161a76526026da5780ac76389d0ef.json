{"ast":null,"code":"var _jsxFileName = \"/home/vojta-pc/Documents/PathfindingBeta/pathfindinfbeta/src/components/Pathfind.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Node from './Node';\nimport './Pathfind.css';\nconst cols = 5;\nconst rows = 5;\n\nconst Pathfind = () => {\n  const [Grid, setGrid] = useState([]);\n  useEffect(() => {\n    initalizeGrid();\n  }, []);\n\n  const initalizeGrid = () => {\n    const grid = new Array(cols);\n\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    createSpot(grid);\n    setGrid(grid);\n  };\n\n  const createSpot = grid => {\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Spot(i, j);\n      }\n    }\n  };\n\n  function Spot(i, j) {\n    this.x = i;\n    this.y = j;\n    this.g = 0;\n    this.f = 0;\n    this.h = 0;\n  }\n\n  ;\n\n  const gridwithNode = () => {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, Grid.map((row, rowIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, row.map((col, colIndex) => {\n        return /*#__PURE__*/React.createElement(Node, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        });\n      }));\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Pathfinding\"));\n};\n\nexport default Pathfind;","map":{"version":3,"sources":["/home/vojta-pc/Documents/PathfindingBeta/pathfindinfbeta/src/components/Pathfind.js"],"names":["React","Component","useState","useEffect","Node","cols","rows","Pathfind","Grid","setGrid","initalizeGrid","grid","Array","i","createSpot","j","Spot","x","y","g","f","h","gridwithNode","map","row","rowIndex","col","colIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;AAEA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,IAAI,GAAG,CAAb;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUP,IAAV,CAAb;;AAEA,SAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,IAAnB,EAAyBQ,CAAC,EAA1B,EAA8B;AAC1BF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,IAAID,KAAJ,CAAUN,IAAV,CAAV;AACH;;AAEDQ,IAAAA,UAAU,CAACH,IAAD,CAAV;AAEAF,IAAAA,OAAO,CAACE,IAAD,CAAP;AACH,GAVD;;AAYA,QAAMG,UAAU,GAAIH,IAAD,IAAU;AACzB,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,IAAnB,EAAyBQ,CAAC,EAA1B,EAA8B;AAC1B,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,IAAnB,EAAyBS,CAAC,EAA1B,EAA8B;AAC1BJ,QAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQE,CAAR,IAAa,IAAIC,IAAJ,CAASH,CAAT,EAAYE,CAAZ,CAAb;AACH;AACJ;AACJ,GAND;;AAQA,WAASC,IAAT,CAAcH,CAAd,EAAiBE,CAAjB,EAAoB;AAChB,SAAKE,CAAL,GAASJ,CAAT;AACA,SAAKK,CAAL,GAASH,CAAT;AACA,SAAKI,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH;;AAAA;;AAED,QAAMC,YAAY,GAAG,MAAM;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKd,IAAI,CAACe,GAAL,CAAS,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACzB,0BACI;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAMC,QAAN,KAAmB;AACxB,4BACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJA,CADL,CADJ;AASH,KAVA,CADL;AAaH,GAdD;;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAKH,CAxDD;;AA0DA,eAAepB,QAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport Node from './Node';\nimport './Pathfind.css';\n\nconst cols = 5;\nconst rows = 5;\n\nconst Pathfind = () => {\n    const [Grid, setGrid] = useState([]);\n\n    useEffect(() => {\n        initalizeGrid();\n    }, []);\n\n    const initalizeGrid = () => {\n        const grid = new Array(cols);\n\n        for(let i = 0; i < cols; i++) {\n            grid[i] = new Array(rows);\n        }\n\n        createSpot(grid);\n\n        setGrid(grid);\n    };\n\n    const createSpot = (grid) => {\n        for(let i = 0; i < cols; i++) {\n            for(let j = 0; j < rows; j++) {\n                grid[i][j] = new Spot(i, j);\n            }\n        }    \n    };\n\n    function Spot(i, j) {\n        this.x = i;\n        this.y = j;\n        this.g = 0;\n        this.f = 0;\n        this.h = 0;\n    };    \n\n    const gridwithNode = () => {\n        <div>\n            {Grid.map((row, rowIndex) => {\n                return (\n                    <div key={rowIndex}>\n                        {row.map((col, colIndex) => {\n                            return (\n                                <Node />\n                            )    \n                        })}\n                    </div>\n                )\n            })}\n        </div>\n    }\n\n    return (\n        <div>\n            <h1>Pathfinding</h1>\n        </div>\n    )\n}\n\nexport default Pathfind\n"]},"metadata":{},"sourceType":"module"}