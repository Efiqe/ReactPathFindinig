{"ast":null,"code":"var _jsxFileName = \"/home/vojta-pc/Documents/FrontEnd/PathfindingBeta/pathfindinfbeta/src/components/Node.js\";\nimport React from 'react';\nimport './Node.css';\n\nconst Node = ({\n  isStart,\n  isEnd,\n  searched,\n  isPath,\n  row,\n  col\n}) => {\n  const classes = isStart ? \"node_start\" : isEnd ? \"node_end\" : isPath ? \"node_path\" : \"\";\n  const draggAble = isStart ? true : isEnd ? true : false;\n\n  const onDrop = e => {\n    e.preventDefault(); // e.dataTransfer.setData(\"Text\", e.target.id);\n\n    let data = e.dataTransfer.getData(\"text\");\n    console.log(data);\n    e.target.appendChild(document.getElementById(data));\n  };\n\n  const onDragStart = e => {\n    console.log(e.target);\n  };\n\n  const onDragOver = e => {\n    console.log(e.target.id);\n    e.dataTransfer.setData(\"text\", e.target.id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: `node-${row}-${col}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: `${row}-${col}`,\n    className: `node ${classes}`,\n    draggable: draggAble,\n    onDragStart: e => onDragStart(e),\n    onDrop: e => onDrop(e),\n    onDragOver: e => onDragOver(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Node;","map":{"version":3,"sources":["/home/vojta-pc/Documents/FrontEnd/PathfindingBeta/pathfindinfbeta/src/components/Node.js"],"names":["React","Node","isStart","isEnd","searched","isPath","row","col","classes","draggAble","onDrop","e","preventDefault","data","dataTransfer","getData","console","log","target","appendChild","document","getElementById","onDragStart","onDragOver","id","setData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA,GAApC;AAAyCC,EAAAA;AAAzC,CAAD,KAAoD;AAC7D,QAAMC,OAAO,GAAGN,OAAO,GAAG,YAAH,GAAkBC,KAAK,GAAG,UAAH,GAAgBE,MAAM,GAAG,WAAH,GAAiB,EAArF;AACA,QAAMI,SAAS,GAAGP,OAAO,GAAG,IAAH,GAAUC,KAAK,GAAG,IAAH,GAAU,KAAlD;;AAEA,QAAMO,MAAM,GAAIC,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF,GADkB,CAElB;;AACA,QAAIC,IAAI,GAAGF,CAAC,CAACG,YAAF,CAAeC,OAAf,CAAuB,MAAvB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAF,IAAAA,CAAC,CAACO,MAAF,CAASC,WAAT,CAAqBC,QAAQ,CAACC,cAAT,CAAwBR,IAAxB,CAArB;AACH,GAND;;AAQA,QAAMS,WAAW,GAAIX,CAAD,IAAO;AACvBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACO,MAAd;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAIZ,CAAD,IAAO;AACtBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACO,MAAF,CAASM,EAArB;AACAb,IAAAA,CAAC,CAACG,YAAF,CAAeW,OAAf,CAAuB,MAAvB,EAA+Bd,CAAC,CAACO,MAAF,CAASM,EAAxC;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,EAAE,EAAG,QAAOlB,GAAI,IAAGC,GAAI,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAG,GAAED,GAAI,IAAGC,GAAI,EADtB;AAEI,IAAA,SAAS,EAAG,QAAOC,OAAQ,EAF/B;AAGI,IAAA,SAAS,EAAEC,SAHf;AAII,IAAA,WAAW,EAAGE,CAAD,IAAQW,WAAW,CAACX,CAAD,CAJpC;AAKI,IAAA,MAAM,EAAGA,CAAD,IAAQD,MAAM,CAACC,CAAD,CAL1B;AAMI,IAAA,UAAU,EAAGA,CAAD,IAAQY,UAAU,CAACZ,CAAD,CANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH,CAjCD;;AAmCA,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport './Node.css';\n\nconst Node = ({ isStart, isEnd, searched, isPath, row, col }) => {\n    const classes = isStart ? \"node_start\" : isEnd ? \"node_end\" : isPath ? \"node_path\" : \"\";\n    const draggAble = isStart ? true : isEnd ? true : false;\n\n    const onDrop = (e) => {\n        e.preventDefault();\n        // e.dataTransfer.setData(\"Text\", e.target.id);\n        let data = e.dataTransfer.getData(\"text\");\n        console.log(data)\n        e.target.appendChild(document.getElementById(data));\n    }\n\n    const onDragStart = (e) => {\n        console.log(e.target)\n    }\n\n    const onDragOver = (e) => {\n        console.log(e.target.id)\n        e.dataTransfer.setData(\"text\", e.target.id)\n    }\n\n    return (\n        <div id={`node-${row}-${col}`}>\n            <div\n                id={`${row}-${col}`}\n                className={`node ${classes}`}\n                draggable={draggAble}\n                onDragStart={(e) => (onDragStart(e))}\n                onDrop={(e) => (onDrop(e))}\n                onDragOver={(e) => (onDragOver(e))}\n            />\n        </div>\n    )\n}\n\nexport default Node;"]},"metadata":{},"sourceType":"module"}